// Import Firebase
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.2/firebase-app.js";
import { getMessaging, getToken, onMessage } from "https://www.gstatic.com/firebasejs/11.0.2/firebase-messaging.js";

// Firebase config
const firebaseConfig = {
  apiKey: "AIzaSyBlch-Era9QH3uXMTquGZCjcGIYQ4TqbZ4",
  authDomain: "lich-hoc-c04a1.firebaseapp.com",
  projectId: "lich-hoc-c04a1",
  storageBucket: "lich-hoc-c04a1.firebasestorage.app",
  messagingSenderId: "236521478243",
  appId: "1:236521478243:web:e4412ffd46b42dff664056",
  measurementId: "G-WK9L0YCSQJ"
};

// Kh·ªüi t·∫°o Firebase
const app = initializeApp(firebaseConfig);
const messaging = getMessaging(app);

// ƒêƒÉng k√Ω service worker ƒë·ªÉ nh·∫≠n push
if ("serviceWorker" in navigator) {
  navigator.serviceWorker.register("firebase-messaging-sw.js")
    .then(reg => console.log("Service Worker ƒë√£ ƒëƒÉng k√Ω:", reg))
    .catch(err => console.error("SW error:", err));
}

// Request quy·ªÅn nh·∫≠n th√¥ng b√°o
async function requestPermission() {
  const permission = await Notification.requestPermission();
  if (permission === "granted") {
    const token = await getToken(messaging, {
      vapidKey: "BPq8rUJ3zkV-ocGxdL-NLZEUw4RMt9fAsCu-ru4K0D_UDd5mStKfo50IVmVbCeTBs8CpceTpSFr2bMMU3aF3shk"
    });
    console.log("FCM Token:", token);
    alert("FCM Token (copy log trong console):\n" + token);
  } else {
    alert("B·∫°n ch∆∞a cho ph√©p th√¥ng b√°o.");
  }
}

// Test th√¥ng b√°o
document.getElementById("testNotify").addEventListener("click", async () => {
  await requestPermission();
  new Notification("üîî Nh·∫Øc nh·ªü", {
    body: "ƒê√¢y l√† th√¥ng b√°o test t·ª´ web app l·ªãch h·ªçc",
    icon: "https://cdn-icons-png.flaticon.com/512/1827/1827349.png"
  });
});

// Nh·∫≠n th√¥ng b√°o foreground
onMessage(messaging, (payload) => {
  console.log("Th√¥ng b√°o foreground:", payload);
  alert("FCM: " + payload.notification.title + "\n" + payload.notification.body);
});

/* ===============================
   PH·∫¶N HI·ªÇN TH·ªä L·ªäCH
================================*/
const schedules = {
  "0": [
    ["22h30 - 2h00", "Ng·ªß ch√≠nh - Gi·∫•c ng·ªß quan tr·ªçng nh·∫•t"],
    ["2h00 - 3h30", "To√°n - T·∫≠p trung cao ƒë·ªô"],
    ["3h30 - 4h15", "Tin - Th·ª±c h√†nh b√†i t·∫≠p"],
    ["4h15 - 5h00", "Anh - T·ª´ v·ª±ng v√† ng·ªØ ph√°p"],
    ["5h00 - 5h30", "ƒÇn nh·∫π, th∆∞ gi√£n"],
    ["5h30 - 6h00", "V·ªá sinh, chu·∫©n b·ªã"],
    ["6h00 - 11h30", "ƒêi h·ªçc bu·ªïi s√°ng"],
    ["11h30 - 13h30", "ƒÇn tr∆∞a + Ng·ªß"],
    ["13h30 - 14h00", "Chu·∫©n b·ªã bu·ªïi chi·ªÅu"],
    ["14h00 - 16h35", "ƒêi h·ªçc bu·ªïi chi·ªÅu"],
    ["16h35 - 17h30", "V·ªÅ nh√†, th∆∞ gi√£n"],
    ["17h30 - 19h30", "ƒÇn t·ªëi + Ngh·ªâ ng∆°i"],
    ["19h30 - 20h30", "L√†m b√†i t·∫≠p tr√™n l·ªõp"],
    ["20h30 - 21h30", "To√°n - Luy·ªán t·∫≠p"],
    ["21h30 - 22h30", "Anh - Luy·ªán nghe & ng·ªØ ph√°p"]
  ],
  "1": [
    ["22h30 - 2h00", "Ng·ªß ch√≠nh"],
    ["2h00 - 3h30", "To√°n"],
    ["3h30 - 4h15", "Anh"],
    ["4h15 - 5h00", "M√¥n ph·ª•"],
    ["5h00 - 5h30", "ƒÇn nh·∫π"],
    ["5h30 - 6h00", "V·ªá sinh, chu·∫©n b·ªã"],
    ["6h00 - 11h30", "ƒêi h·ªçc bu·ªïi s√°ng"],
    ["11h30 - 13h30", "ƒÇn tr∆∞a + Ng·ªß"],
    ["13h30 - 14h00", "Chu·∫©n b·ªã bu·ªïi chi·ªÅu"],
    ["14h00 - 16h35", "ƒêi h·ªçc bu·ªïi chi·ªÅu"],
    ["16h35 - 17h30", "Chu·∫©n b·ªã ƒëi h·ªçc th√™m"],
    ["17h30 - 19h30", "H·ªçc th√™m To√°n"],
    ["19h30 - 20h30", "V·ªÅ nh√†, ƒÉn t·ªëi mu·ªôn"],
    ["20h30 - 21h30", "To√°n - √în luy·ªán"],
    ["21h30 - 22h30", "Anh - Ng·ªØ ph√°p, nghe"]
  ],
  "6": [
    ["22h30 - 2h00", "Ng·ªß ch√≠nh"],
    ["2h00 - 3h30", "Tin - Th·ª±c h√†nh"],
    ["3h30 - 4h15", "Anh - T·ª´ v·ª±ng"],
    ["4h15 - 5h00", "To√°n - B√†i t·∫≠p"],
    ["5h00 - 5h30", "ƒÇn nh·∫π"],
    ["5h30 - 6h00", "V·ªá sinh c√° nh√¢n"],
    ["6h00 - 11h30", "T·ª± h·ªçc m√¥n ph·ª• / Ngh·ªâ"],
    ["11h30 - 13h30", "ƒÇn tr∆∞a + Ng·ªß"],
    ["13h30 - 14h00", "Th∆∞ gi√£n"],
    ["14h00 - 16h35", "L√†m b√†i t·∫≠p cu·ªëi tu·∫ßn"],
    ["16h35 - 17h30", "Ngh·ªâ ng∆°i"],
    ["17h30 - 19h30", "ƒÇn t·ªëi + Ngh·ªâ ng∆°i"],
    ["19h30 - 20h30", "√în t·∫≠p t·ªïng h·ª£p"],
    ["20h30 - 21h30", "To√°n - Luy·ªán ƒë·ªÅ"],
    ["21h30 - 22h30", "√în nh·∫π t·∫•t c·∫£ m√¥n"]
  ]
};

// Hi·ªÉn th·ªã l·ªãch
function showSchedule(day) {
  const body = document.getElementById("scheduleBody");
  body.innerHTML = "";
  const todaySchedule = schedules[day];
  if (!todaySchedule) return;
  todaySchedule.forEach(([time, activity]) => {
    const row = `<tr><td>${time}</td><td>${activity}</td></tr>`;
    body.innerHTML += row;
  });
}

// ƒê·ªìng h·ªì
function updateDateTime() {
  const now = new Date();
  document.getElementById("datetime").textContent = 
    now.toLocaleDateString("vi-VN") + " " + now.toLocaleTimeString("vi-VN");
}

// T√≠nh t·ªïng gi·ªù h·ªçc/ng·ªß
function calculateStats() {
  document.getElementById("stats").innerHTML = `
    T·ªïng h·ªçc: ~8.5h/ng√†y<br>
    T·ªïng ng·ªß: ~3.5h/ng√†y<br>
    T·ª± h·ªçc: ~6.5h/ng√†y
  `;
}

document.addEventListener("DOMContentLoaded", () => {
  showSchedule(0);
  calculateStats();
  updateDateTime();
  setInterval(updateDateTime, 1000);
});
